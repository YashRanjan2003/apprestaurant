generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  phone     String
  email     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model MenuItem {
  id            String      @id
  name          String
  description   String
  price         Float
  category      String
  imageUrl      String
  isVeg         Boolean     @default(false)
  rating        Float?
  ratingCount   Int         @default(0)
  originalPrice Float?
  offer         String?
  isAvailable   Boolean     @default(true)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orderItems    OrderItem[]
}

model Order {
  id              String        @id @default(cuid())
  userId          String
  status          OrderStatus   @default(PENDING)
  orderType       OrderType
  deliveryAddress String?
  scheduledTime   String
  paymentMethod   PaymentType
  paymentStatus   PaymentStatus @default(PENDING)
  otp             String
  itemTotal       Float
  gst             Float
  platformFee     Float
  deliveryCharge  Float
  finalTotal      Float
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  user            User          @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id         String   @id @default(cuid())
  orderId    String
  menuItemId String
  quantity   Int
  price      Float
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  order      Order    @relation(fields: [orderId], references: [id])
}

model Discount {
  id                   String       @id @default(cuid())
  code                 String       @unique
  type                 DiscountType
  value                Float
  minOrderValue        Float?
  maxDiscount          Float?
  validFrom            DateTime
  validUntil           DateTime
  description          String
  isActive             Boolean      @default(true)
  usageLimit           Int?
  usageCount           Int          @default(0)
  applicableCategories String[]
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
}

enum OrderType {
  PICKUP
  DELIVERY
}

enum PaymentType {
  CARD
  CASH
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum DiscountType {
  PERCENTAGE
  FIXED
  BOGO
}
